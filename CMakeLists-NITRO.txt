include(ExternalProject)

set(CODA_DIR ${CMAKE_CURRENT_SOURCE_DIR}/externals/coda-oss)
file(MAKE_DIRECTORY ${CMAKE_INSTALL_PREFIX}/include)

ExternalProject_Add(coda-oss
                    SOURCE_DIR ${CODA_DIR}
                    CONFIGURE_COMMAND ""
                    BUILD_COMMAND ""
                    INSTALL_COMMAND "")

if(CMAKE_BUILD_TYPE MATCHES Debug)
    set(configure_flags "--enable-swig\;--enable-debugging")
elseif(CMAKE_BUILD_TYPE MATCHES RelWithDebInfo)
    set(configure_flags "--enable-swig\;--enable-debugging")
else()
    set(configure_flags "--enable-swig")
endif()

ExternalProject_Add_Step(coda-oss
        waf-configure
        COMMAND ${PYTHON} waf configure --prefix=${CODA_INSTALL_DIR} "${configure_flags}"
        DEPENDERS build
        ALWAYS 0
        WORKING_DIRECTORY ${CODA_DIR})

list(JOIN coda_modules , install_targets)
ExternalProject_Add_Step(coda-oss
        waf-build-${module}
        COMMAND ${PYTHON} waf install --target=${install_targets}
        DEPENDEES waf-configure
        DEPENDERS build
        ALWAYS 0
        WORKING_DIRECTORY ${CODA_DIR})

ExternalProject_Add(nitro
                    SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/externals/nitro
                    CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}
                               -DCODA_INSTALL_DIR=${CMAKE_INSTALL_PREFIX}
                               -DNO_JPEG=ON
                               -DENABLE_STATIC_TRES=ON)

add_dependencies(nitro coda-oss)
